[
  {
    "name": "Arrays",
    "link": "https://www.geeksforgeeks.org/dsa/array-data-structure-guide/"
  },
  {
    "name": "Strings",
    "link": "https://www.geeksforgeeks.org/dsa/string-data-structure/"
  },
  {
    "name": "Linked List",
    "link": "https://www.geeksforgeeks.org/linked-list-data-structure/"
  },
  {
    "name": "Stack",
    "link": "https://www.geeksforgeeks.org/stack-data-structure/"
  },
  {
    "name": "Queue",
    "link": "https://www.geeksforgeeks.org/queue-data-structure/"
  },
  {
    "name": "Deque (Double-ended Queue)",
    "link": "https://www.geeksforgeeks.org/dsa/deque-set-1-introduction-applications/"
  },
  {
    "name": "Hash Table / HashMap",
    "link": "https://www.geeksforgeeks.org/hashing-data-structure/"
  },
  {
    "name": "HashSet",
    "link": "https://www.geeksforgeeks.org/java/hashset-in-java/"
  },
  {
    "name": "Priority Queue (Min/Max Heap)",
    "link": "https://www.geeksforgeeks.org/dsa/priority-queue-set-1-introduction/"
  },
  {
    "name": "Heaps (MinHeap, MaxHeap)",
    "link": "https://www.geeksforgeeks.org/binary-heap/"
  },
  {
    "name": "Binary Tree",
    "link": "https://www.geeksforgeeks.org/binary-tree-data-structure/"
  },
  {
    "name": "Binary Search Tree (BST)",
    "link": "https://www.geeksforgeeks.org/binary-search-tree-data-structure/"
  },
  {
    "name": "AVL Tree",
    "link": "https://www.geeksforgeeks.org/avl-tree-set-1-insertion/"
  },
  {
    "name": "Segment Tree",
    "link": "https://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/"
  },
  {
    "name": "Fenwick Tree (BIT)",
    "link": "https://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/"
  },
  {
    "name": "Trie (prefix Tree)",
    "link": "https://www.geeksforgeeks.org/dsa/trie-insert-and-search/"
  },
  {
    "name": "Suffix Tree / Array",
    "link": "https://www.geeksforgeeks.org/suffix-array-set-1-introduction/"
  },
  {
    "name": "Graph (Adj. List/Matrix)",
    "link": "https://www.geeksforgeeks.org/graph-and-its-representations/"
  },
  {
    "name": "Union-Find (DSU)",
    "link": "https://www.geeksforgeeks.org/disjoint-set-data-structures/"
  },
  {
    "name": "Tree Map (Balanced BST Map)",
    "link": "https://www.geeksforgeeks.org/treemap-in-java/"
  },
  {
    "name": "TreeSet",
    "link": "https://www.geeksforgeeks.org/treeset-in-java/"
  },
  {
    "name": "Treap",
    "link": "https://cp-algorithms.com/data_structures/treap.html"
  },
  {
    "name": "K-D Tree",
    "link": "https://www.geeksforgeeks.org/k-dimensional-tree/"
  },
  {
    "name": "LRU cache",
    "link": "https://www.geeksforgeeks.org/lru-cache-implementation/"
  },
  {
    "name": "Disjoint Intervals",
    "link": "https://www.geeksforgeeks.org/merging-intervals/"
  },
  {
    "name": "Rope",
    "link": "https://www.geeksforgeeks.org/dsa/ropes-data-structure-fast-string-concatenation/"
  },
  { "name": "Skip List", "link": "https://www.geeksforgeeks.org/skip-list/" },
  {
    "name": "Circular Buffers",
    "link": "https://www.geeksforgeeks.org/circular-queue-set-1-introduction-array-implementation/"
  },
  {
    "name": "Bloom Filter",
    "link": "https://www.geeksforgeeks.org/python/bloom-filters-introduction-and-python-implementation/"
  },
  {
    "name": "B-Trees / B+ Trees",
    "link": "https://www.geeksforgeeks.org/b-tree-set-1-introduction-2/"
  },
  {
    "name": "Sparse Table",
    "link": "https://cp-algorithms.com/data_structures/sparse-table.html"
  },
  {
    "name": "Euler Tour Tree",
    "link": "https://codeforces.com/blog/entry/102087"
  }
]
