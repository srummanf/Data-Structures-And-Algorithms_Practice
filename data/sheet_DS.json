{
  "Arrays": [
    {
      "id": 1,
      "name": "Array Partition",
      "link": "https://leetcode.com/problems/array-partition/",
      "difficulty": "Easy"
    },
    {
      "id": 2,
      "name": "Implement Stack using Arrays",
      "link": "https://leetcode.com/problems/implement-stack-using-queues/",
      "difficulty": "Easy"
    },
    {
      "id": 3,
      "name": "Best Time to Buy and Sell Stock",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
      "difficulty": "Easy"
    },
    {
      "id": 4,
      "name": "Candy",
      "link": "https://leetcode.com/problems/candy/",
      "difficulty": "Hard"
    },
    {
      "id": 5,
      "name": "Subsets",
      "link": "https://leetcode.com/problems/subsets/",
      "difficulty": "Medium"
    },
    {
      "id": 6,
      "name": "The K Weakest Rows in a Matrix",
      "link": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/",
      "difficulty": "Easy"
    },
    {
      "id": 7,
      "name": "Longest Subarray of 1â€™s After Deleting One Element",
      "link": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/",
      "difficulty": "Medium"
    },
    {
      "id": 8,
      "name": "Majority Element",
      "link": "https://leetcode.com/problems/majority-element/",
      "difficulty": "Easy"
    },
    {
      "id": 9,
      "name": "Maximum Distance in Arrays",
      "link": "https://leetcode.com/problems/maximum-distance-in-arrays/",
      "difficulty": "Medium"
    },
    {
      "id": 10,
      "name": "Maximum Product of Splitted Binary Tree",
      "link": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 11,
      "name": "Maximum Subarray",
      "link": "https://leetcode.com/problems/maximum-subarray/",
      "difficulty": "Medium"
    },
    {
      "id": 12,
      "name": "Minimum Array End",
      "link": "https://leetcode.com/problems/minimum-array-end/",
      "difficulty": "Medium"
    },
    {
      "id": 13,
      "name": "Minimum Operations to Reduce X to Zero",
      "link": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/",
      "difficulty": "Medium"
    },
    {
      "id": 14,
      "name": "Sort an Array",
      "link": "https://leetcode.com/problems/sort-an-array/",
      "difficulty": "Medium"
    },
    {
      "id": 15,
      "name": "Median of Two Sorted Arrays",
      "link": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
      "difficulty": "Hard"
    },
    {
      "id": 16,
      "name": "Game of Life",
      "link": "https://leetcode.com/problems/game-of-life/",
      "difficulty": "Medium"
    },
    {
      "id": 17,
      "name": "Spiral Matrix III",
      "link": "https://leetcode.com/problems/spiral-matrix-iii/",
      "difficulty": "Medium"
    },
    {
      "id": 18,
      "name": "Number of Days to Disconnect Island",
      "link": "https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island/",
      "difficulty": "Hard"
    },
    {
      "id": 19,
      "name": "Number of Islands",
      "link": "https://leetcode.com/problems/number-of-islands/",
      "difficulty": "Medium"
    },
    {
      "id": 20,
      "name": "Spiral Matrix IV",
      "link": "https://leetcode.com/problems/spiral-matrix-iv/",
      "difficulty": "Medium"
    }
  ],
  "Linked List": [
    {
      "id": 1,
      "name": "Linked List Cycle",
      "link": "https://leetcode.com/problems/linked-list-cycle/",
      "difficulty": "Easy"
    },
    {
      "id": 2,
      "name": "Find the Duplicate Number",
      "link": "https://leetcode.com/problems/find-the-duplicate-number/",
      "difficulty": "Medium"
    },
    {
      "id": 3,
      "name": "Flatten Binary Tree to Linked List",
      "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
      "difficulty": "Medium"
    },
    {
      "id": 4,
      "name": "Linked List Cycle II",
      "link": "https://leetcode.com/problems/linked-list-cycle-ii/",
      "difficulty": "Medium"
    },
    {
      "id": 5,
      "name": "Merge k Sorted Lists",
      "link": "https://leetcode.com/problems/merge-k-sorted-lists/",
      "difficulty": "Hard"
    },
    {
      "id": 6,
      "name": "Reverse Linked List",
      "link": "https://leetcode.com/problems/reverse-linked-list/",
      "difficulty": "Easy"
    },
    {
      "id": 7,
      "name": "Sort List",
      "link": "https://leetcode.com/problems/sort-list/",
      "difficulty": "Medium"
    },
    {
      "id": 8,
      "name": "Reverse Linked List II",
      "link": "https://leetcode.com/problems/reverse-linked-list-ii/",
      "difficulty": "Medium"
    },
    {
      "id": 9,
      "name": "Insert into a Sorted Circular Linked List",
      "link": "https://leetcode.com/problems/insert-into-a-sorted-circular-linked-list/",
      "difficulty": "Medium"
    }
  ],
  "Stack": [
    {
      "id": 1,
      "name": "Baseball Game",
      "link": "https://leetcode.com/problems/baseball-game/",
      "difficulty": "Easy"
    },
    {
      "id": 2,
      "name": "Reverse Substrings Between Each Pair of Parentheses",
      "link": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/",
      "difficulty": "Medium"
    },
    {
      "id": 3,
      "name": "Daily Temperatures",
      "link": "https://leetcode.com/problems/daily-temperatures/",
      "difficulty": "Medium"
    },
    {
      "id": 4,
      "name": "Valid Parentheses",
      "link": "https://leetcode.com/problems/valid-parentheses/",
      "difficulty": "Easy"
    }
  ],
  "Queue": [
    {
      "id": 1,
      "name": "Rotation of Array",
      "link": "https://leetcode.com/problems/rotation-of-array/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Implement Queue using Stacks",
      "link": "https://leetcode.com/problems/implement-queue-using-stacks/",
      "difficulty": "Easy"
    },
    {
      "id": 3,
      "name": "Sliding Window Maximum",
      "link": "https://leetcode.com/problems/sliding-window-maximum/",
      "difficulty": "Hard"
    },
    {
      "id": 4,
      "name": "Design Circular Queue",
      "link": "https://leetcode.com/problems/design-circular-queue/",
      "difficulty": "Medium"
    }
  ],
  "Hashing": [
    {
      "id": 1,
      "name": "Longest Consecutive Sequence",
      "link": "https://leetcode.com/problems/longest-consecutive-sequence/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Two Sum",
      "link": "https://leetcode.com/problems/two-sum/",
      "difficulty": "Easy"
    },
    {
      "id": 3,
      "name": "Unique Number of Occurrences",
      "link": "https://leetcode.com/problems/unique-number-of-occurrences/",
      "difficulty": "Easy"
    },
    {
      "id": 4,
      "name": "Number of Submatrices That Sum to Target",
      "link": "https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/",
      "difficulty": "Hard"
    },
    {
      "id": 5,
      "name": "Count Distinct Elements in Every K-sized Window",
      "link": "https://www.codingninjas.com/studio/problem-details/count-distinct-elements-in-every-k-size-window_920336",
      "difficulty": "Medium",
      "platform": "Coding Ninjas"
    },
    {
      "id": 6,
      "name": "Union and Intersection of Two Unsorted Arrays",
      "link": "https://www.geeksforgeeks.org/dsa/find-union-and-intersection-of-two-unsorted-arrays/",
      "difficulty": "Medium",
      "platform": "GeeksforGeeks"
    }
  ],
  "Heap": [
    {
      "id": 1,
      "name": "Kth Largest Element in an Array",
      "link": "https://leetcode.com/problems/kth-largest-element-in-an-array/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Find Median from Data Stream",
      "link": "https://leetcode.com/problems/find-median-from-data-stream/",
      "difficulty": "Hard"
    },
    {
      "id": 3,
      "name": "Top K Frequent Elements",
      "link": "https://leetcode.com/problems/top-k-frequent-elements/",
      "difficulty": "Medium"
    },
    {
      "id": 4,
      "name": "Last Stone Weight",
      "link": "https://leetcode.com/problems/last-stone-weight/",
      "difficulty": "Easy"
    },
    {
      "id": 5,
      "name": "Seat Reservation Manager",
      "link": "https://leetcode.com/problems/seat-reservation-manager/",
      "difficulty": "Medium"
    }
  ],
  "Tree": [
    {
      "id": 1,
      "name": "Add One Row to Tree",
      "link": "https://leetcode.com/problems/add-one-row-to-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Create Binary Tree From Descriptions",
      "link": "https://leetcode.com/problems/create-binary-tree-from-descriptions/",
      "difficulty": "Medium"
    },
    {
      "id": 3,
      "name": "Delete Nodes And Return Forest",
      "link": "https://leetcode.com/problems/delete-nodes-and-return-forest/",
      "difficulty": "Medium"
    },
    {
      "id": 4,
      "name": "Flatten Binary Tree to Linked List",
      "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
      "difficulty": "Medium"
    },
    {
      "id": 5,
      "name": "Balanced Binary Tree",
      "link": "https://leetcode.com/problems/balanced-binary-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 6,
      "name": "Diameter of Binary Tree",
      "link": "https://leetcode.com/problems/diameter-of-binary-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 7,
      "name": "Binary Tree Maximum Path Sum",
      "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/",
      "difficulty": "Hard"
    },
    {
      "id": 8,
      "name": "Same Tree",
      "link": "https://leetcode.com/problems/same-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 9,
      "name": "Binary Tree Zigzag Level Order Traversal",
      "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/",
      "difficulty": "Medium"
    },
    {
      "id": 10,
      "name": "Vertical Order Traversal of a Binary Tree",
      "link": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/",
      "difficulty": "Hard"
    },
    {
      "id": 11,
      "name": "Invert Binary Tree",
      "link": "https://leetcode.com/problems/invert-binary-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 12,
      "name": "Symmetric Tree",
      "link": "https://leetcode.com/problems/symmetric-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 13,
      "name": "Lowest Common Ancestor of a Binary Tree",
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 14,
      "name": "Path Sum",
      "link": "https://leetcode.com/problems/path-sum/",
      "difficulty": "Easy"
    },
    {
      "id": 15,
      "name": "Path Sum II",
      "link": "https://leetcode.com/problems/path-sum-ii/",
      "difficulty": "Medium"
    },
    {
      "id": 16,
      "name": "Binary Tree Pruning",
      "link": "https://leetcode.com/problems/binary-tree-pruning/",
      "difficulty": "Medium"
    }
  ],
  "Graph": [
    {
      "id": 1,
      "name": "Build a Matrix With Conditions",
      "link": "https://leetcode.com/problems/build-a-matrix-with-conditions/",
      "difficulty": "Hard"
    },
    {
      "id": 2,
      "name": "Word Ladder",
      "link": "https://leetcode.com/problems/word-ladder/",
      "difficulty": "Hard"
    },
    {
      "id": 3,
      "name": "Number of Operations to Make Network Connected",
      "link": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/",
      "difficulty": "Medium"
    },
    {
      "id": 4,
      "name": "Detect Cycle in an Undirected Graph (DFS)",
      "link": "https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1",
      "difficulty": "Medium"
    },
    {
      "id": 5,
      "name": "Is Graph Bipartite?",
      "link": "https://leetcode.com/problems/is-graph-bipartite/",
      "difficulty": "Medium"
    },
    {
      "id": 6,
      "name": "Course Schedule (Detect Cycle in Directed Graph)",
      "link": "https://leetcode.com/problems/course-schedule/",
      "difficulty": "Medium"
    },
    {
      "id": 7,
      "name": "Topological Sort (DFS)",
      "link": "https://practice.geeksforgeeks.org/problems/topological-sort/1",
      "difficulty": "Medium"
    },
    {
      "id": 8,
      "name": "Course Schedule II (Topo Sort BFS - Kahn's Algo)",
      "link": "https://leetcode.com/problems/course-schedule-ii/",
      "difficulty": "Medium"
    },
    {
      "id": 9,
      "name": "Find Eventual Safe States",
      "link": "https://leetcode.com/problems/find-eventual-safe-states/",
      "difficulty": "Medium"
    },
    {
      "id": 10,
      "name": "Alien Dictionary",
      "link": "https://practice.geeksforgeeks.org/problems/alien-dictionary/1",
      "difficulty": "Hard"
    },
    {
      "id": 11,
      "name": "Dijkstra's Algorithm",
      "link": "https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1",
      "difficulty": "Medium"
    },
    {
      "id": 12,
      "name": "Path With Minimum Effort",
      "link": "https://leetcode.com/problems/path-with-minimum-effort/",
      "difficulty": "Medium"
    },
    {
      "id": 13,
      "name": "Bellman Ford Algorithm",
      "link": "https://practice.geeksforgeeks.org/problems/bellman-ford-algorithm/0",
      "difficulty": "Medium"
    },
    {
      "id": 14,
      "name": "Floyd Warshall Algorithm",
      "link": "https://practice.geeksforgeeks.org/problems/implementing-floyd-warshall2042/1",
      "difficulty": "Medium"
    },
    {
      "id": 15,
      "name": "Prim's Minimum Spanning Tree",
      "link": "https://practice.geeksforgeeks.org/problems/minimum-spanning-tree/1",
      "difficulty": "Medium"
    },
    {
      "id": 16,
      "name": "Disjoint Set Union (By Rank/Size)",
      "link": "https://practice.geeksforgeeks.org/problems/disjoint-set-union-find/1",
      "difficulty": "Medium"
    },
    {
      "id": 17,
      "name": "Kosaraju's Algorithm (SCC)",
      "link": "https://practice.geeksforgeeks.org/problems/strongly-connected-components-kosarajus-algo/1",
      "difficulty": "Hard"
    },
    {
      "id": 18,
      "name": "Bridges in Graph (Tarjan's Algo)",
      "link": "https://leetcode.com/problems/critical-connections-in-a-network/",
      "difficulty": "Hard"
    },
    {
      "id": 19,
      "name": "Flood Fill",
      "link": "https://leetcode.com/problems/flood-fill/",
      "difficulty": "Easy"
    },
    {
      "id": 20,
      "name": "Number of Connected Components in an Undirected Graph",
      "link": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",
      "difficulty": "Medium"
    },
    {
      "id": 21,
      "name": "Number of Islands",
      "link": "https://leetcode.com/problems/number-of-islands/",
      "difficulty": "Medium"
    },
    {
      "id": 22,
      "name": "Parallel Courses III",
      "link": "https://leetcode.com/problems/parallel-courses-iii/",
      "difficulty": "Hard"
    }
  ],
  "Tries": [
    {
      "id": 1,
      "name": "Implement Trie (Prefix Tree)",
      "link": "https://leetcode.com/problems/implement-trie-prefix-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Add and Search Word - Data structure design",
      "link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/",
      "difficulty": "Medium"
    },
    {
      "id": 3,
      "name": "Replace Words",
      "link": "https://leetcode.com/problems/replace-words/",
      "difficulty": "Medium"
    }
  ],
  "AVL Tree": [
    {
      "id": 1,
      "name": "Convert Sorted Array to Binary Search Tree",
      "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 2,
      "name": "Convert Sorted List to Binary Search Tree",
      "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",
      "difficulty": "Medium"
    }
  ],
  "Binary Search Tree": [
    {
      "id": 1,
      "name": "Convert Sorted Array to Binary Search Tree",
      "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 2,
      "name": "Lowest Common Ancestor of a Binary Search Tree",
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 3,
      "name": "Convert Sorted List to Binary Search Tree",
      "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 4,
      "name": "Find Mode in Binary Search Tree",
      "link": "https://leetcode.com/problems/find-mode-in-binary-search-tree/",
      "difficulty": "Easy"
    },
    {
      "id": 5,
      "name": "Validate Binary Search Tree",
      "link": "https://leetcode.com/problems/validate-binary-search-tree/",
      "difficulty": "Medium"
    }
  ],
  "Complete Tree": [
    {
      "id": 1,
      "name": "Check Completeness of a Binary Tree",
      "link": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Count Complete Tree Nodes",
      "link": "https://leetcode.com/problems/count-complete-tree-nodes/",
      "difficulty": "Easy"
    }
  ],
  "Segment Tree": [
    {
      "id": 1,
      "name": "Range Sum Query - Mutable",
      "link": "https://leetcode.com/problems/range-sum-query-mutable/",
      "difficulty": "Medium"
    },
    {
      "id": 2,
      "name": "Range Sum of Sorted Subarray Sums",
      "link": "https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/",
      "difficulty": "Medium"
    },
    {
      "id": 3,
      "name": "XOR Queries of a Subarray",
      "link": "https://leetcode.com/problems/xor-queries-of-a-subarray/",
      "difficulty": "Medium"
    }
  ],
  "Suffix Tree": [
    {
      "id": 1,
      "name": "Count Distinct Substrings",
      "link": "https://www.geeksforgeeks.org/count-distinct-substrings-using-suffix-tree/",
      "difficulty": "Medium",
      "platform": "GeeksforGeeks"
    },
    {
      "id": 2,
      "name": "Longest Common Substring",
      "link": "https://www.geeksforgeeks.org/longest-common-substring/",
      "difficulty": "Medium",
      "platform": "GeeksforGeeks"
    }
  ]
}
